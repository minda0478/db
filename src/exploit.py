import subprocess
import json
import requests
import base64

class exploit:
    def __init__(self, cve_id, gitn=3):
        self.id = cve_id
        self.path = []
        self.github = []
        self._set_exploit_searchsploit()
        self._set_exploit_github(gitn)

    def get_path(self):
        return self.path

    def get_github(self):
        return self.github

    def exist_exploit(self):
        return self.path or self.github

    def _set_exploit_searchsploit(self):
        cve_id = self.id
        exploit_json = subprocess.Popen(['wsl','-e','/bin/sh','-c',
                              f'/mnt/c/assignment/wert/exploitdb/searchsploit ' \
                              f'--cve {cve_id[4:]} -j'],
                              stdout=subprocess.PIPE,encoding="utf-8").stdout.read()
        
        exploit_result = json.loads(exploit_json)["RESULTS_EXPLOIT"]

        for exploit_data in exploit_result:
            self.path.append(exploit_data["Path"])
    


    def _set_exploit_github(self, n=10):
        headers = {
            "Accept":"application/vnd.github+json",
            "X-GitHub-Api-Version":"2022-11-28"
        }
        url = "https://api.github.com"
        path = "/search/repositories"

        query = {
            "q":self.id,
            "per_page":n
        }
        res = requests.get(f"{url}{path}",params=query)
        j = json.loads(res.text)
        if 'items' not in j:
            return

        item = j['items']
        
        for i in item:
            
            if self.id in i["name"].lower():
                self.github.append(i["clone_url"])
                continue

            if isinstance(i["description"],str) and self.id in i["description"].lower():
                self.github.append(i["clone_url"])
                continue
            if "topics" in i:
                f = False
                for t in i["topics"]:
                    if self.id in t.lower():
                        f = True
                        continue
                if f:
                    
                    self.github.append(i["clone_url"])
                    continue
            
            res = requests.get(i["contents_url"][:-7]+"README.md")
            contents = res.json()["content"]
            
            if self.id in base64.b64decode(contents).decode().lower():
                self.github.append(i["clone_url"])
                
            

                    

if __name__ == "__main__":
    a = exploit("cve-2021-44228")
    print(a.github)